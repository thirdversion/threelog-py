name: Create a release

env:
  PYTHON_VERSION: "3.10"

on:
  push:
    branches:
      - main
    paths:
      - "pyproject.toml"

jobs:
  cancel-previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  check:
    name: Detect version change
    runs-on: ubuntu-latest

    outputs:
      newVersion: ${{ steps.changes.outputs.newVersion }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect new version
        id: changes
        run: |
          NEW_VERSION="$(./versionChangeCheck.sh)"
          echo "New version if changed = '$NEW_VERSION'"
          echo ::set-output name=newVersion::$NEW_VERSION

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: ["check"]

    if: ${{ (needs.check.outputs.newVersion != '') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - run: ./build.sh

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: ${{ needs.check.outputs.newVersion }}
          files: dist/**

      - run: ./release.sh ${{ secrets.PYPI_TOKEN }}
